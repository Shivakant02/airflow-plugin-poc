{"timestamp":"2025-07-21T07:25:07.190074","level":"info","event":"MetadataExtractionPlugin module is being loaded","logger":"metadata_extraction_plugin"}
{"timestamp":"2025-07-21T07:25:07.190494","level":"info","event":"MetadataExtractionPlugin initialized successfully","logger":"metadata_extraction_plugin"}
{"timestamp":"2025-07-21T07:25:07.437683","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-21T07:25:07.437977","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/simple_success_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-21T07:25:07.458749Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:07.459120Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:07.459317Z","level":"info","event":"Current task name:end_task","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:07.459505Z","level":"info","event":"Dag name:simple_success_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:07.461267Z","level":"info","event":"DAG ending - wrapping up","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:22.461722Z","level":"info","event":"End task completed successfully","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:22.461832","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-21T07:25:22.492879Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:22.493059Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-21T07:25:22.493184Z","level":"info","event":"Task operator:<Task(PythonOperator): end_task>","chan":"stdout","logger":"task"}
